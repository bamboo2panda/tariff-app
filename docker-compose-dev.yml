version: '3'

services: 
  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports: 
      - 80:80
    volumes: 
      - static_volume:/backend/static
      - ./docker/nginx/development:/etc/nginx/conf.d
    environment: 
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
      - WEB_HOST=0.0.0.0
      - REACT_APP_WEB_PORT=8000
    depends_on:
      - backend
  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/dev/Dockerfile
    volumes:
      - ./backend:/backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on: 
      - db
    environment: 
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
      - WEB_HOST=0.0.0.0
      - REACT_APP_WEB_PORT=8000
    networks:
      - djangonetwork
  db:
    image: postgres:13.1-alpine
    environment: 
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
      - WEB_HOST=0.0.0.0
      - REACT_APP_WEB_PORT=8000
    networks:
      - djangonetwork

volumes:
  static_volume: {}

networks:
  djangonetwork:
    driver: bridge